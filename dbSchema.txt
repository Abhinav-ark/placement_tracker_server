CREATE TABLE company (
    id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    companyName VARCHAR(200) NOT NULL
)

CREATE TABLE student (
    rollNo VARCHAR(100) PRIMARY KEY NOT NULL,
    fullName VARCHAR(200) NOT NULL,
    gender VARCHAR(1) NOT NULL,
    section VARCHAR(1) NOT NULL,
    batch VARCHAR(4) NOT NULL,
    campus VARCHAR(100) NOT NULL,
    dept VARCHAR(100) NOT NULL,
    isHigherStudies VARCHAR(1) NOT NULL
)

/*
location: ALWAYS UPPERCASE
*/
CREATE TABLE placements (
    id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    studentRollNo VARCHAR(100) NOT NULL,
    companyID INT NOT NULL,
    role VARCHAR(200) NOT NULL,
    ctc VARCHAR(100) NOT NULL,
    datePlaced VARCHAR(200) NOT NULL,
    isPPO VARCHAR(1) NOT NULL,
    isOnCampus VARCHAR(1) NOT NULL,
    extra VARCHAR(500),
    location VARCHAR(200) NOT NULL,
    FOREIGN KEY (studentRollNo) REFERENCES student(rollNo),
    FOREIGN KEY (companyID) REFERENCES company(id)
)

CREATE TABLE role (
    id VARCHAR(1) PRIMARY KEY NOT NULL,
    roleName VARCHAR(200) NOT NULL
)

CREATE TABLE user (
    id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    fullName VARCHAR(200) NOT NULL,
    userEmail VARCHAR(200) NOT NULL UNIQUE,
    userPassword VARCHAR(200) NOT NULL,
    userRole VARCHAR(1) NOT NULL,
    createdAt VARCHAR(500) NOT NULL,
    FOREIGN KEY (userRole) REFERENCES role(id)
)

CREATE TABLE loginHistory (
        id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
        userEmail VARCHAR(200) NOT NULL,
        loginTime VARCHAR(500) NOT NULL,
        FOREIGN KEY (userEmail) REFERENCES user(userEmail)
)

/* 
role
    0 -> user
    1 -> admin
*/


/* BARD */
-- Management table

CREATE TABLE management (
    id INT NOT NULL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    role VARCHAR(255) NOT NULL,
    PRIMARY KEY (id)
);

-- Student table

CREATE TABLE students (
    id INT NOT NULL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    roll_number VARCHAR(255) NOT NULL UNIQUE,
    class_section VARCHAR(255) NOT NULL,
    department VARCHAR(255) NOT NULL,
    higher_studies BOOLEAN NOT NULL DEFAULT FALSE,
    placement BOOLEAN NOT NULL DEFAULT FALSE,
    interests (array of strings),
    skills (array of strings),
    academic_performance (decimal),
    management_id INT NOT NULL,
    FOREIGN KEY (management_id) REFERENCES management (id),
    PRIMARY KEY (id)
);

-- Companies table

CREATE TABLE companies (
    id INT NOT NULL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL UNIQUE,
    website VARCHAR(255),
    contact_information VARCHAR(255),
    industry VARCHAR(255),
    technologies (array of strings),
    PRIMARY KEY (id)
);

-- Jobs table

CREATE TABLE jobs (
    id INT NOT NULL AUTO_INCREMENT,
    company_id INT NOT NULL,
    title VARCHAR(255) NOT NULL,
    location VARCHAR(255),
    description TEXT NOT NULL,
    deadline DATETIME NOT NULL,
    package DECIMAL(10,2),
    type VARCHAR(255) NOT NULL,
    required_skills (array of strings),
    FOREIGN KEY (company_id) REFERENCES companies (id),
    PRIMARY KEY (id)
);

-- Applications table

CREATE TABLE applications (
    id INT NOT NULL AUTO_INCREMENT,
    student_id INT NOT NULL,
    job_id INT NOT NULL,
    status VARCHAR(255) NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (student_id) REFERENCES students (id),
    FOREIGN KEY (job_id) REFERENCES jobs (id)
);

-- Career roadmaps table

CREATE TABLE career_roadmaps (
    id INT NOT NULL AUTO_INCREMENT,
    student_id INT NOT NULL,
    steps (array of strings),
    FOREIGN KEY (student_id) REFERENCES students (id),
    PRIMARY KEY (id)
);

-- Alumni network table

CREATE TABLE alumni_network (
    id INT NOT NULL AUTO_INCREMENT,
    user_id INT NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    company VARCHAR(255) NOT NULL,
    designation VARCHAR(255) NOT NULL,
    FOREIGN KEY (user_id) REFERENCES students (id),
    PRIMARY KEY (id)
);

-- Mentoring relationships table

CREATE TABLE mentoring_relationships (
    id INT NOT NULL AUTO_INCREMENT,
    mentor_id INT NOT NULL,
    mentee_id INT NOT NULL,
    FOREIGN KEY (mentor_id) REFERENCES students (id),
    FOREIGN KEY (mentee_id) REFERENCES students (id),
    PRIMARY KEY (id)
);

-- Job interview resources table

CREATE TABLE job_interview_resources (
    id INT NOT NULL AUTO_INCREMENT,
    title VARCHAR(255) NOT NULL,
    link VARCHAR(255),
    PRIMARY KEY (id)
);

-- Career counseling resources table

CREATE TABLE career_counseling_resources (
    id INT NOT NULL AUTO_INCREMENT,
    title VARCHAR(255) NOT NULL,
    link VARCHAR(255),
    PRIMARY KEY (id)
);
